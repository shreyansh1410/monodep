user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile       on;
    keepalive_timeout 65;

    # Upstream definitions remain the same
    upstream frontend {
        server 127.0.0.1:3000;
    }

    upstream backend {
        server 127.0.0.1:3002;
    }

    upstream websocket {
        server 127.0.0.1:3001;
    }

    # Server block for the Frontend domain
    server {
        listen 80;
        server_name monorepofe.shreyanshshukla.me; # Frontend domain

        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade'; # Needed if frontend uses websockets
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Server block for the Backend domain
    server {
        listen 80;
        server_name monorepohttp.shreyanshshukla.me; # Backend domain

        location / { # Root path on this domain maps to backend root
            proxy_pass http://backend;
            proxy_http_version 1.1;
            # Headers below might not be strictly needed for a pure HTTP backend,
            # but are included for consistency or if it might handle upgrades.
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Server block for the Websocket domain
    server {
        listen 80;
        server_name monorepows.shreyanshshukla.me; # Websocket domain

        location / { # Root path on this domain maps to websocket root
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade"; # Essential for websockets
            proxy_set_header Host $host;
            proxy_read_timeout 86400; # Good practice for websocket connections
        }
    }

    # You might keep a default server block (server_name _;) to catch requests
    # that don't match any of the specific domains, perhaps returning a 404 or a
    # default page. If not present, Nginx will default to the first server block.
}